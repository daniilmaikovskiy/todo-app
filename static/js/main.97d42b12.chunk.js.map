{"version":3,"sources":["components/new-task-form/index.js","components/new-task-form/new-task-form.js","components/task/index.js","components/task/task.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/tasks-filter/index.js","components/tasks-filter/tasks-filter.js","components/footer/index.js","components/footer/footer.js","components/main/index.js","components/main/main.js","components/app/index.js","components/app/app.js","index.js"],"names":["NewTaskForm","className","placeholder","autoFocus","Task","props","labelOnClick","isActive","onDeleted","state","this","description","created","editInput","type","defaultValue","onClick","formatDistanceToNow","addSuffix","value","setState","Component","TodoList","tasks","taskArr","map","taskData","id","taskProps","key","TasksFilter","Footer","Main","App","Date","index","findIndex","el","before","slice","after","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.97d42b12.chunk.js","sourcesContent":["import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;","import React from 'react';\nimport './new-task-form.css';\n\nexport default function NewTaskForm() {\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <input className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus />\n        </header>\n    );\n}","import Task from './task';\n\nexport default Task;","import React, { Component } from 'react';\nimport './task.css';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nexport default class Task extends Component {\n  constructor(props) {\n    super(props);\n    \n    let { onDeleted, ...state } = props;\n\n    this.state = { ...state };\n  }\n\n  set isActive(value) {\n    if (value)\n      this.setState(() => ({ className: 'active' }));\n    else\n      this.setState(() => ({ className: 'completed' }));\n  }\n\n  get isActive() {\n    return this.state.className === 'active';\n  }\n\n  labelOnClick = () => this.isActive = !this.isActive;\n\n  render() {\n    const { className, description, created } = this.state;\n    const { onDeleted } = this.props;\n\n    const editInput = (\n      className === 'editing' \n      ? <input type=\"text\" className=\"edit\" defaultValue={ description } /> \n      : null);\n    \n    return (\n      <li className={ className }>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" />\n          <label onClick={ this.labelOnClick }>\n            <span className=\"description\">{ description }</span>\n            <span className=\"created\">\n              { formatDistanceToNow(created, { addSuffix: true }) }\n            </span>\n          </label>\n          <button className=\"icon icon-edit\"></button>\n          <button className=\"icon icon-destroy\" onClick={ onDeleted }></button>\n        </div>\n        { editInput }\n      </li>\n    );\n  }\n}","import TodoList from './todo-list';\n\nexport default TodoList;","import React, { Component } from 'react';\nimport './todo-list.css';\nimport Task from '../task';\n\nexport default class TodoList extends Component {\n    constructor(props) {\n        super(props);\n        \n        let { tasks } = props;\n\n        this.state = { ...tasks };\n    }\n\n    render() {\n        let { tasks } = this.props;\n\n        const taskArr = tasks.map(taskData => {\n            let { id, ...taskProps } = taskData;\n    \n            return <Task key={ id } { ...taskProps } \n                onDeleted={ () => this.props.onDeleted(id) } />\n        });\n    \n        return (\n            <ul className=\"todo-list\">\n                { taskArr }\n            </ul>\n        );\n    }\n}","import TasksFilter from './tasks-filter';\n\nexport default TasksFilter;","import React from 'react';\nimport './tasks-filter.css';\n\nexport default function Footer() {\n    return (\n        <ul className=\"filters\">\n            <li>\n              <button className=\"selected\">All</button>\n            </li>\n            <li>\n              <button>Active</button>\n            </li>\n            <li>\n              <button>Completed</button>\n            </li>\n        </ul>\n    );\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\nimport './footer.css';\nimport TasksFilter from '../tasks-filter';\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer\">\n            <span className=\"todo-count\">1 items left</span>\n            <TasksFilter />\n            <button className=\"clear-completed\">Clear completed</button>\n        </footer>\n    );\n}","import Main from './main';\n\nexport default Main;","import React from 'react';\nimport './main.css';\nimport TodoList from '../todo-list';\nimport Footer from '../footer';\n\nexport default function Main({ tasks, onDeleted }) {\n    return (\n        <section className='main'>\n            <TodoList tasks={ tasks } onDeleted={ onDeleted } />\n            <Footer />\n        </section>\n    );\n}","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport './app.css';\nimport NewTaskForm from '../new-task-form';\nimport Main from '../main';\n\nexport default class App extends Component {\n  state = {\n    tasks: [\n      {\n        id: 1,\n        className: 'completed',\n        description: 'Completed task',\n        created: new Date('June 21, 2020 10:24:18'),\n      },\n      {\n        id: 2,\n        className: 'editing',\n        description: 'Editing task',\n        created: new Date('June 21, 2020 10:48:43'),\n      },\n      {\n        id: 3,\n        className: 'active',\n        description: 'Active task',\n        created: new Date('June 21, 2020 11:17:21'),\n      },\n    ]\n  };\n\n  onDeleted = id => {\n    this.setState(state => {\n      let index = state.tasks.findIndex(el => id === el.id);\n\n      let before = state.tasks.slice(0, index);\n      let after  = state.tasks.slice(index + 1);\n\n      return { tasks: [ ...before, ...after ] };\n    });\n  }\n\n  render() {\n    return (\n      <section className='todoapp'>\n        <NewTaskForm />\n        <Main tasks={ this.state.tasks } onDeleted={ this.onDeleted } />\n      </section>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}