{"version":3,"sources":["components/app/app-helper.js","components/app/settings.js","components/new-task-form/index.js","components/new-task-form/new-task-form.js","components/edit-input/index.js","components/edit-input/edit-input.js","components/icon-button/index.js","components/icon-button/icon-button.js","components/task/index.js","components/task/task.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/filter-button/index.js","components/filter-button/filter-button.js","components/tasks-filter/index.js","components/tasks-filter/tasks-filter.js","components/footer/index.js","components/footer/footer.js","components/app/index.js","components/app/app.js","index.js"],"names":["updateTasks","tasks","idx","newTaskProps","before","slice","after","DEFAULT_TASKS","id","className","description","created","Date","timer","active","min","sec","NewTaskForm","addNewTask","onChangeTask","onChangeSeconds","onChangeMinutes","value","seconds","minutes","style","display","onSubmit","e","preventDefault","name","onChange","target","placeholder","inputString","trim","number","Number","isNaN","Math","floor","toString","EditInput","isCompleted","onEdited","indexOf","input","type","trimLeft","defaultValue","IconButton","onClick","modifier","icon","Task","onDeleted","onCompleted","onClickEditButton","filter","decreaseTimer","setTimerActive","dateNow","useEffect","isHidden","secStr","minStr","getTimerString","formatDistanceToNow","addSuffix","TodoList","useState","now","setDateNow","timerId","setInterval","newDateNow","clearInterval","taskArr","map","taskData","taskProps","key","text","FilterButton","setFilter","TasksFilter","Footer","clearCompleted","completedCount","App","setTasks","maxId","setMaxId","newTaskInput","setNewTaskInput","newTaskSeconds","setNewTaskSeconds","newTaskMinutes","setNewTaskMinutes","createNewTask","txt","task","state","length","findIndex","el","newText","newSec","newMin","newTimer","String","currentTasks","reduce","acc","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b7737fbb.chunk.js","sourcesContent":["const updateTasks = (tasks, idx, newTaskProps = null) => {\n  const before = tasks.slice(0, idx);\n  const after = tasks.slice(idx + 1);\n\n  if (newTaskProps === null) return [...before, ...after];\n\n  return [...before, { ...newTaskProps }, ...after];\n};\n\nexport { updateTasks as default };\n","export const DEFAULT_TASKS = [\n  {\n    id: 1,\n    className: 'completed',\n    description: 'Completed task',\n    created: new Date('June 21, 2020 10:24:18'),\n    timer: { active: false, min: '0', sec: '0' },\n  },\n  {\n    id: 2,\n    className: 'active-before-edit editing',\n    description: 'Editing task',\n    created: new Date('June 21, 2020 10:48:43'),\n    timer: { active: true, min: '10', sec: '0' },\n  },\n  {\n    id: 3,\n    className: 'active',\n    description: 'Active task',\n    created: new Date('June 21, 2020 11:17:21'),\n    timer: { active: true, min: '10', sec: '0' },\n  },\n];\n\nexport const DEFAULT_MAX_ID = 4;\n","import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './new-task-form.css';\n\nexport default function NewTaskForm({\n  addNewTask,\n  onChangeTask,\n  onChangeSeconds,\n  onChangeMinutes,\n  value,\n  seconds,\n  minutes,\n}) {\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addNewTask();\n  };\n\n  const onChangeSecondsInput = (e) => {\n    const inputString = e.target.value.trim();\n\n    if (inputString === '') {\n      onChangeSeconds('');\n      return;\n    }\n\n    const number = Number(inputString);\n\n    if (!Number.isNaN(number) && number < 60) {\n      onChangeSeconds(Math.floor(number).toString());\n    }\n  };\n\n  const onChangeMinutesInput = (e) => {\n    const inputString = e.target.value.trim();\n\n    if (inputString === '') {\n      onChangeMinutes('');\n      return;\n    }\n\n    const number = Number(inputString);\n\n    if (!Number.isNaN(number) && number < 100) {\n      onChangeMinutes(Math.floor(number).toString());\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"new-todo\"\n          name=\"input\"\n          value={value}\n          onChange={(e) => onChangeTask(e.target.value)}\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n      <input\n        name=\"minutes\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Min\"\n        value={minutes}\n        onChange={onChangeMinutesInput}\n      />\n      <input\n        name=\"seconds\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Sec\"\n        value={seconds}\n        onChange={onChangeSecondsInput}\n      />\n    </div>\n  );\n}\n\nNewTaskForm.propTypes = {\n  value: PropTypes.string.isRequired,\n  seconds: PropTypes.string.isRequired,\n  minutes: PropTypes.string.isRequired,\n  addNewTask: PropTypes.func.isRequired,\n  onChangeTask: PropTypes.func.isRequired,\n  onChangeSeconds: PropTypes.func.isRequired,\n  onChangeMinutes: PropTypes.func.isRequired,\n};\n","import EditInput from './edit-input';\n\nexport default EditInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './edit-input.css';\n\nexport default function EditInput({ className, isCompleted, description, onEdited }) {\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onEdited(e.target.input.value);\n  };\n  const onChange = (e) => {\n    e.target.value = e.target.value.trimLeft();\n  };\n\n  if (className.indexOf('editing') + 1) {\n    return (\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          className={`edit edit-${isCompleted ? 'completed' : 'active'}`}\n          onChange={onChange}\n          defaultValue={description}\n          name=\"input\"\n        />\n      </form>\n    );\n  }\n\n  return null;\n}\n\nEditInput.propTypes = {\n  className: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  onEdited: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n};\n","import IconButton from './icon-button';\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './icon-button.css';\n\nexport default function IconButton({ onClick, modifier, icon }) {\n  return (\n    <button type=\"button\" className={`icon icon-${modifier}`} onClick={onClick}>\n      {icon}\n    </button>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  modifier: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n","import Task from './task';\n\nexport default Task;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './task.css';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport EditInput from '../edit-input';\nimport IconButton from '../icon-button';\n\nexport default function Task({\n  onDeleted,\n  onCompleted,\n  onClickEditButton,\n  onEdited,\n  className,\n  description,\n  created,\n  filter,\n  timer,\n  decreaseTimer,\n  setTimerActive,\n  dateNow,\n}) {\n  useEffect(() => {\n    if (timer.active) {\n      decreaseTimer();\n    }\n    // decreaseTimer and timer.active will be missed to avoid wrong calling the function\n    // that generates an extra call of decreaseTimer\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dateNow]);\n\n  const onClick = (value) => {\n    setTimerActive(value);\n  };\n\n  const isCompleted = className.indexOf('completed') + 1;\n  const isHidden = (filter === 'completed' && !isCompleted) || (filter === 'active' && isCompleted);\n\n  const getTimerString = ({ min, sec }) => {\n    const secStr = sec < 10 ? `0${Number(sec)}` : sec;\n    const minStr = min < 10 ? `0${Number(min)}` : min;\n\n    return `${minStr}:${secStr}`;\n  };\n\n  return (\n    <li className={className + (isHidden ? ' hidden' : '')}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" />\n        <label>\n          <button type=\"button\" className=\"description\" onClick={onCompleted}>\n            {description}\n          </button>\n          <div className=\"timer-panel\">\n            <button\n              type=\"button\"\n              className=\"icon icon-play\"\n              onClick={() => {\n                onClick(true);\n              }}\n            >\n              ▶\n            </button>\n            <button\n              type=\"button\"\n              className=\"icon icon-pause\"\n              onClick={() => {\n                onClick(false);\n              }}\n            >\n              ⏸\n            </button>\n            <span className=\"time\">{getTimerString(timer)}</span>\n          </div>\n          <span className=\"created\">{formatDistanceToNow(created, { addSuffix: true })}</span>\n        </label>\n        <IconButton icon=\"✎\" modifier=\"edit\" onClick={onClickEditButton} />\n        <IconButton icon=\"×\" modifier=\"destroy\" onClick={onDeleted} />\n      </div>\n      <EditInput\n        className={className}\n        isCompleted={!!isCompleted}\n        description={description}\n        onEdited={onEdited}\n      />\n    </li>\n  );\n}\n\nTask.propTypes = {\n  onDeleted: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  onClickEditButton: PropTypes.func.isRequired,\n  onEdited: PropTypes.func.isRequired,\n  decreaseTimer: PropTypes.func.isRequired,\n  setTimerActive: PropTypes.func.isRequired,\n\n  className: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  created: PropTypes.objectOf(Date).isRequired,\n  timer: PropTypes.shape({\n    active: PropTypes.bool.isRequired,\n    sec: PropTypes.string.isRequired,\n    min: PropTypes.string.isRequired,\n  }).isRequired,\n\n  filter: PropTypes.string.isRequired,\n  dateNow: PropTypes.number.isRequired,\n};\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-list.css';\nimport Task from '../task';\n\nexport default function TodoList({\n  tasks,\n  filter,\n  onDeleted,\n  onEdited,\n  onCompleted,\n  onClickEditButton,\n  decreaseTimer,\n  setTimerActive,\n}) {\n  const [dateNow, setDateNow] = useState(Math.floor(Date.now() / 1000));\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      const newDateNow = Math.floor(Date.now() / 1000);\n\n      if (newDateNow !== dateNow) {\n        setDateNow(newDateNow);\n      }\n    }, 10);\n\n    return () => clearInterval(timerId);\n    // component did mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const taskArr = tasks.map((taskData) => {\n    const { id, ...taskProps } = taskData;\n\n    return (\n      <Task\n        key={id}\n        {...taskProps}\n        filter={filter}\n        onDeleted={() => onDeleted(id)}\n        onEdited={(text) => onEdited(id, text)}\n        onCompleted={() => {\n          onCompleted(id);\n        }}\n        onClickEditButton={() => {\n          onClickEditButton(id);\n        }}\n        decreaseTimer={(value) => {\n          decreaseTimer(id, value);\n        }}\n        setTimerActive={(value) => {\n          setTimerActive(id, value);\n        }}\n        dateNow={dateNow}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{taskArr}</ul>;\n}\n\nTodoList.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      className: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      created: PropTypes.objectOf(Date).isRequired,\n      timer: PropTypes.shape({\n        active: PropTypes.bool.isRequired,\n        sec: PropTypes.string.isRequired,\n        min: PropTypes.string.isRequired,\n      }),\n    })\n  ).isRequired,\n\n  filter: PropTypes.string.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onEdited: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  onClickEditButton: PropTypes.func.isRequired,\n  decreaseTimer: PropTypes.func.isRequired,\n  setTimerActive: PropTypes.func.isRequired,\n};\n","import FilterButton from './filter-button';\n\nexport default FilterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './filter-button.css';\n\nexport default function FilterButton({ name, filter, setFilter }) {\n  const getClassName = () => `${name === filter ? 'selected ' : ''}first-upper-letter`;\n  const onClick = (e) => setFilter(e.target.name);\n\n  return (\n    <button type=\"button\" name={name} className={getClassName()} onClick={onClick}>\n      {name}\n    </button>\n  );\n}\n\nFilterButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import TasksFilter from './tasks-filter';\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './tasks-filter.css';\nimport FilterButton from '../filter-button';\n\nexport default function TasksFilter({ filter, setFilter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <FilterButton name=\"all\" filter={filter} setFilter={setFilter} />\n      </li>\n      <li>\n        <FilterButton name=\"active\" filter={filter} setFilter={setFilter} />\n      </li>\n      <li>\n        <FilterButton name=\"completed\" filter={filter} setFilter={setFilter} />\n      </li>\n    </ul>\n  );\n}\n\nTasksFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import Footer from './footer';\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './footer.css';\nimport TasksFilter from '../tasks-filter';\n\nexport default function Footer({ setFilter, filter, clearCompleted, completedCount }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{completedCount} items left</span>\n      <TasksFilter setFilter={setFilter} filter={filter} />\n      <button type=\"button\" className=\"clear-completed\" onClick={clearCompleted}>\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  completedCount: PropTypes.number.isRequired,\n};\n","import App from './app';\n\nexport default App;\n","import React, { useState } from 'react';\nimport './app.css';\nimport updateTasks from './app-helper';\nimport { DEFAULT_TASKS, DEFAULT_MAX_ID } from './settings';\nimport NewTaskForm from '../new-task-form';\nimport TodoList from '../todo-list';\nimport Footer from '../footer';\n\nexport default function App() {\n  const [tasks, setTasks] = useState(DEFAULT_TASKS);\n  const [maxId, setMaxId] = useState(DEFAULT_MAX_ID);\n  const [newTaskInput, setNewTaskInput] = useState('');\n  const [newTaskSeconds, setNewTaskSeconds] = useState('');\n  const [newTaskMinutes, setNewTaskMinutes] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  const createNewTask = (txt, sec, min) => {\n    const task = {\n      id: maxId,\n      className: 'active',\n      description: txt,\n      created: new Date(),\n      timer: { active: true, sec, min },\n    };\n\n    setMaxId((state) => state + 1);\n\n    return task;\n  };\n\n  const onDeleted = (id) =>\n    setTasks(\n      updateTasks(\n        tasks,\n        tasks.findIndex((el) => el.id === id)\n      )\n    );\n\n  const clearCompleted = () => {\n    setTasks((state) => {\n      let idx = state.findIndex((el) => el.className.indexOf('completed') + 1);\n      let currentTasks = [...state];\n\n      while (idx + 1) {\n        currentTasks = updateTasks(currentTasks, idx);\n        idx = currentTasks.findIndex((el) => el.className.indexOf('completed') + 1);\n      }\n\n      return currentTasks;\n    });\n  };\n\n  const getCompletedCount = () => {\n    return tasks.reduce(\n      (acc, task) => (task.className.indexOf('completed') + 1 ? acc + 1 : acc),\n      0\n    );\n  };\n\n  const onEdited = (id, text) => {\n    setTasks((state) => {\n      const idx = state.findIndex((el) => el.id === id);\n      const className = state[idx].className.indexOf('completed') + 1 ? 'completed' : 'active';\n      let newText = text.trim();\n\n      newText = newText.length ? newText : state[idx].description;\n\n      return updateTasks(state, idx, { ...state[idx], description: newText, className });\n    });\n  };\n\n  const onCompleted = (id) => {\n    setTasks((state) => {\n      const idx = state.findIndex((el) => el.id === id);\n      const className = state[idx].className === 'completed' ? 'active' : 'completed';\n\n      return updateTasks(state, idx, { ...state[idx], className });\n    });\n  };\n\n  const onClickEditButton = (id) => {\n    setTasks((state) => {\n      const idx = state.findIndex((el) => el.id === id);\n      const className = `${state[idx].className}-before-edit editing`;\n\n      return updateTasks(state, idx, { ...state[idx], className });\n    });\n  };\n\n  const addNewTask = () => {\n    const text = newTaskInput.trim();\n\n    if (!text.length) return;\n\n    setNewTaskInput('');\n    setNewTaskSeconds('');\n    setNewTaskMinutes('');\n    setTasks((state) => [...state, createNewTask(text, newTaskSeconds, newTaskMinutes)]);\n  };\n\n  const decreaseTimer = (id, value = 1) => {\n    if (value >= 60 || value <= 0) return;\n\n    setTasks((state) => {\n      const idx = state.findIndex((el) => el.id === id);\n      const { timer } = state[idx];\n\n      let newSec = Number(timer.sec);\n      let newMin = Number(timer.min);\n      let active = true;\n\n      if (timer.sec >= value) {\n        newSec -= value;\n      } else if (timer.min > 0) {\n        newMin -= 1;\n        newSec += 60 - value;\n      } else {\n        newSec = '';\n        newMin = '';\n        active = false;\n      }\n\n      const newTimer = { active, sec: String(newSec), min: String(newMin) };\n\n      return updateTasks(state, idx, { ...state[idx], timer: newTimer });\n    });\n  };\n\n  const setTimerActive = (id, value) => {\n    setTasks((state) => {\n      const idx = state.findIndex((el) => el.id === id);\n      const newTimer = { ...state[idx].timer, active: value };\n\n      return updateTasks(state, idx, { ...state[idx], timer: newTimer });\n    });\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <NewTaskForm\n          addNewTask={addNewTask}\n          onChangeTask={setNewTaskInput}\n          onChangeSeconds={setNewTaskSeconds}\n          onChangeMinutes={setNewTaskMinutes}\n          value={newTaskInput}\n          seconds={newTaskSeconds}\n          minutes={newTaskMinutes}\n        />\n      </header>\n      <section className=\"main\">\n        <TodoList\n          tasks={tasks}\n          filter={filter}\n          onDeleted={onDeleted}\n          onEdited={onEdited}\n          onCompleted={onCompleted}\n          onClickEditButton={onClickEditButton}\n          decreaseTimer={decreaseTimer}\n          setTimerActive={setTimerActive}\n        />\n        <Footer\n          setFilter={setFilter}\n          filter={filter}\n          clearCompleted={clearCompleted}\n          completedCount={getCompletedCount()}\n        />\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}